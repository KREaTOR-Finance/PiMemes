{"version":3,"file":"static/js/846.f786cfe1.chunk.js","mappings":"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","sources":["pages/CreateProfile.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useStore from \"../context/store\";\r\n\r\nexport default function CreateProfile() {\r\n  const { updateProfile } = useStore();\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    bio: \"\",\r\n    avatar: null\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [avatarPreview, setAvatarPreview] = useState(null);\r\n  const navigate = useNavigate();\r\n  \r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n    \r\n    // Clear error when user types\r\n    if (errors[name]) {\r\n      setErrors(prev => ({ ...prev, [name]: null }));\r\n    }\r\n  };\r\n  \r\n  const handleAvatarChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setFormData(prev => ({ ...prev, avatar: file }));\r\n      \r\n      // Create preview URL\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setAvatarPreview(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n  \r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    \r\n    if (!formData.username.trim()) {\r\n      newErrors.username = \"Username is required\";\r\n    } else if (formData.username.length < 3) {\r\n      newErrors.username = \"Username must be at least 3 characters\";\r\n    }\r\n    \r\n    if (!formData.email.trim()) {\r\n      newErrors.email = \"Email is required\";\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n      newErrors.email = \"Email is invalid\";\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n  \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (validateForm()) {\r\n      setIsSubmitting(true);\r\n      try {\r\n        // Update the global store with the profile data\r\n        await updateProfile({\r\n          username: formData.username,\r\n          email: formData.email,\r\n          bio: formData.bio,\r\n          avatar: avatarPreview\r\n        });\r\n        navigate(\"/home\");\r\n      } catch (error) {\r\n        console.error(\"Error creating profile:\", error);\r\n        setErrors({ submit: \"Failed to create profile. Please try again.\" });\r\n      } finally {\r\n        setIsSubmitting(false);\r\n      }\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"min-h-screen flex flex-col\">\r\n      <div className=\"flex-1 flex items-center justify-center p-6\">\r\n        <div className=\"w-full max-w-md\">\r\n          <div className=\"bg-dark border border-royalPurple rounded-lg p-6 shadow-lg\">\r\n            <div className=\"text-center mb-6\">\r\n              <h1 className=\"text-2xl font-bold text-gold mb-2\">Create Your Profile</h1>\r\n              <p className=\"text-lightGray\">Set up your PiMemes profile</p>\r\n            </div>\r\n            \r\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n              {/* Avatar Upload */}\r\n              <div className=\"flex flex-col items-center mb-6\">\r\n                <div \r\n                  className=\"w-24 h-24 rounded-full bg-royalPurple bg-opacity-30 flex items-center justify-center overflow-hidden border-2 border-royalPurple mb-2\"\r\n                  style={{ \r\n                    backgroundImage: avatarPreview ? `url(${avatarPreview})` : 'none',\r\n                    backgroundSize: 'cover',\r\n                    backgroundPosition: 'center'\r\n                  }}\r\n                >\r\n                  {!avatarPreview && (\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-12 w-12 text-royalPurple\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\r\n                    </svg>\r\n                  )}\r\n                </div>\r\n                <label className=\"bg-royalPurple text-gold text-sm py-1 px-3 rounded-full cursor-pointer hover:bg-opacity-90 transition-all\">\r\n                  Upload Avatar\r\n                  <input \r\n                    type=\"file\" \r\n                    accept=\"image/*\" \r\n                    className=\"hidden\" \r\n                    onChange={handleAvatarChange}\r\n                  />\r\n                </label>\r\n              </div>\r\n              \r\n              {/* Username */}\r\n              <div>\r\n                <label htmlFor=\"username\" className=\"block text-sm font-medium text-lightGray mb-1\">\r\n                  Username <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"username\"\r\n                  name=\"username\"\r\n                  value={formData.username}\r\n                  onChange={handleChange}\r\n                  className={`w-full bg-dark border ${errors.username ? 'border-red-500' : 'border-gray-700'} rounded-lg p-3 text-lightGray focus:outline-none focus:ring-1 focus:ring-royalPurple`}\r\n                  placeholder=\"Enter a unique username\"\r\n                />\r\n                {errors.username && (\r\n                  <p className=\"mt-1 text-xs text-red-500\">{errors.username}</p>\r\n                )}\r\n              </div>\r\n              \r\n              {/* Email */}\r\n              <div>\r\n                <label htmlFor=\"email\" className=\"block text-sm font-medium text-lightGray mb-1\">\r\n                  Email <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  value={formData.email}\r\n                  onChange={handleChange}\r\n                  className={`w-full bg-dark border ${errors.email ? 'border-red-500' : 'border-gray-700'} rounded-lg p-3 text-lightGray focus:outline-none focus:ring-1 focus:ring-royalPurple`}\r\n                  placeholder=\"Enter your email\"\r\n                />\r\n                {errors.email && (\r\n                  <p className=\"mt-1 text-xs text-red-500\">{errors.email}</p>\r\n                )}\r\n              </div>\r\n              \r\n              {/* Bio */}\r\n              <div>\r\n                <label htmlFor=\"bio\" className=\"block text-sm font-medium text-lightGray mb-1\">\r\n                  Bio (Optional)\r\n                </label>\r\n                <textarea\r\n                  id=\"bio\"\r\n                  name=\"bio\"\r\n                  value={formData.bio}\r\n                  onChange={handleChange}\r\n                  rows=\"3\"\r\n                  className=\"w-full bg-dark border border-gray-700 rounded-lg p-3 text-lightGray focus:outline-none focus:ring-1 focus:ring-royalPurple\"\r\n                  placeholder=\"Tell us about yourself\"\r\n                ></textarea>\r\n              </div>\r\n              \r\n              {/* Submit Button */}\r\n              <button\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n                className=\"w-full bg-royalPurple text-gold py-3 px-4 rounded-lg flex items-center justify-center hover:bg-opacity-90 transition-all disabled:opacity-70 mt-6\"\r\n              >\r\n                {isSubmitting ? (\r\n                  <>\r\n                    <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-gold\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                    </svg>\r\n                    Creating Profile...\r\n                  </>\r\n                ) : (\r\n                  \"Create Profile\"\r\n                )}\r\n              </button>\r\n              \r\n              {/* Skip Link */}\r\n              <div className=\"text-center mt-4\">\r\n                <button \r\n                  type=\"button\" \r\n                  onClick={() => navigate(\"/home\")}\r\n                  className=\"text-sm text-gray-400 hover:text-gold\"\r\n                >\r\n                  Skip for now\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":["CreateProfile","updateProfile","useStore","formData","setFormData","useState","username","email","bio","avatar","errors","setErrors","isSubmitting","setIsSubmitting","avatarPreview","setAvatarPreview","navigate","useNavigate","handleChange","e","name","value","target","prev","_jsx","className","children","_jsxs","onSubmit","async","preventDefault","validateForm","newErrors","trim","length","test","Object","keys","error","console","submit","style","backgroundImage","backgroundSize","backgroundPosition","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","type","accept","onChange","file","files","reader","FileReader","onloadend","result","readAsDataURL","htmlFor","id","placeholder","rows","disabled","_Fragment","cx","cy","r","onClick"],"sourceRoot":""}