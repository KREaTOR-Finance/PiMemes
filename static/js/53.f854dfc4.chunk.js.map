{"version":3,"file":"static/js/53.f854dfc4.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/24/outline/esm/ArrowPathIcon.js","pages/Farming.js","components/Card.js"],"sourcesContent":["import * as React from \"react\";\nfunction ArrowPathIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0 3.181 3.183a8.25 8.25 0 0 0 13.803-3.7M4.031 9.865a8.25 8.25 0 0 1 13.803-3.7l3.181 3.182m0-4.991v4.99\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowPathIcon);\nexport default ForwardRef;","import { useState } from \"react\";\r\nimport { ArrowPathIcon } from \"@heroicons/react/24/outline\";\r\nimport useStore from \"../context/store\";\r\nimport Card from \"../components/Card\";\r\n\r\nexport default function Farming() {\r\n  const { isWalletConnected, connectWallet } = useStore();\r\n  const [selectedPool, setSelectedPool] = useState(null);\r\n  const [stakeAmount, setStakeAmount] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const pools = [\r\n    {\r\n      id: 1,\r\n      name: \"DOGEPI-PI\",\r\n      apr: \"120%\",\r\n      tvl: \"25,000 PI\",\r\n      yourStake: \"1,000 LP\",\r\n      rewards: \"5.2 PI\",\r\n      lpToken: \"DOGEPI-PI LP\"\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"SHIBPI-PI\",\r\n      apr: \"85%\",\r\n      tvl: \"18,500 PI\",\r\n      yourStake: \"500 LP\",\r\n      rewards: \"2.8 PI\",\r\n      lpToken: \"SHIBPI-PI LP\"\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"MOONPI-PI\",\r\n      apr: \"95%\",\r\n      tvl: \"22,000 PI\",\r\n      yourStake: \"750 LP\",\r\n      rewards: \"4.1 PI\",\r\n      lpToken: \"MOONPI-PI LP\"\r\n    }\r\n  ];\r\n\r\n  const handleStake = async () => {\r\n    if (!isWalletConnected) {\r\n      connectWallet();\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    // Simulate staking delay\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n      setStakeAmount(\"\");\r\n      setSelectedPool(null);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleHarvest = async (poolId) => {\r\n    if (!isWalletConnected) {\r\n      connectWallet();\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    // Simulate harvesting delay\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\r\n      <div style={{ marginBottom: '32px', textAlign: 'center' }}>\r\n        <h1 style={{ color: '#FFD700', fontWeight: 'bold', fontSize: '32px', marginBottom: '12px' }}>Yield Farming</h1>\r\n        <p style={{ color: '#9ca3af' }}>Stake your LP tokens to earn rewards</p>\r\n      </div>\r\n\r\n      <div style={{ display: 'grid', gap: '24px' }}>\r\n        {pools.map((pool) => (\r\n          <Card key={pool.id}>\r\n            <div style={{ display: 'flex', flexDirection: 'column', gap: '24px' }}>\r\n              {/* Header */}\r\n              <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                  <div style={{\r\n                    width: '48px',\r\n                    height: '48px',\r\n                    background: 'linear-gradient(to right, rgba(106, 13, 173, 0.5), rgba(106, 13, 173, 0.3))',\r\n                    borderRadius: '50%',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    marginRight: '16px'\r\n                  }}>\r\n                    <span style={{ color: '#FFD700', fontWeight: 'bold', fontSize: '20px' }}>{pool.name.split('-')[0][0]}</span>\r\n                  </div>\r\n                  <div>\r\n                    <h3 style={{ color: '#FFD700', fontWeight: 'bold', fontSize: '20px', marginBottom: '4px' }}>{pool.name}</h3>\r\n                    <p style={{ color: '#9ca3af', fontSize: '14px' }}>Earn PI rewards</p>\r\n                  </div>\r\n                </div>\r\n                <div style={{ textAlign: 'right' }}>\r\n                  <div style={{ color: '#FFD700', fontWeight: 'bold', fontSize: '24px', marginBottom: '4px' }}>{pool.apr}</div>\r\n                  <p style={{ color: '#9ca3af', fontSize: '14px' }}>APR</p>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Pool Stats */}\r\n              <div style={{\r\n                display: 'grid',\r\n                gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\r\n                gap: '16px',\r\n                padding: '16px',\r\n                backgroundColor: 'rgba(0, 0, 0, 0.4)',\r\n                borderRadius: '12px'\r\n              }}>\r\n                <div>\r\n                  <p style={{ color: '#9ca3af', fontSize: '14px', marginBottom: '4px' }}>Total Value Locked</p>\r\n                  <p style={{ color: '#FFD700', fontWeight: '500' }}>{pool.tvl}</p>\r\n                </div>\r\n                <div>\r\n                  <p style={{ color: '#9ca3af', fontSize: '14px', marginBottom: '4px' }}>Your Stake</p>\r\n                  <p style={{ color: '#FFD700', fontWeight: '500' }}>{pool.yourStake}</p>\r\n                </div>\r\n                <div>\r\n                  <p style={{ color: '#9ca3af', fontSize: '14px', marginBottom: '4px' }}>Pending Rewards</p>\r\n                  <p style={{ color: '#FFD700', fontWeight: '500' }}>{pool.rewards}</p>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Actions */}\r\n              <div style={{ display: 'flex', gap: '16px' }}>\r\n                <button\r\n                  onClick={() => setSelectedPool(pool)}\r\n                  style={{\r\n                    flex: 1,\r\n                    backgroundColor: 'rgba(106, 13, 173, 0.5)',\r\n                    color: '#FFD700',\r\n                    padding: '12px',\r\n                    borderRadius: '12px',\r\n                    fontWeight: '500',\r\n                    transition: 'background-color 0.2s'\r\n                  }}\r\n                  onMouseOver={(e) => e.target.style.backgroundColor = 'rgba(106, 13, 173, 0.7)'}\r\n                  onMouseOut={(e) => e.target.style.backgroundColor = 'rgba(106, 13, 173, 0.5)'}\r\n                >\r\n                  Stake\r\n                </button>\r\n                <button\r\n                  onClick={() => handleHarvest(pool.id)}\r\n                  disabled={isLoading}\r\n                  style={{\r\n                    flex: 1,\r\n                    backgroundColor: '#FFD700',\r\n                    color: '#000000',\r\n                    padding: '12px',\r\n                    borderRadius: '12px',\r\n                    fontWeight: '500',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    gap: '8px',\r\n                    transition: 'background-color 0.2s'\r\n                  }}\r\n                  onMouseOver={(e) => e.target.style.backgroundColor = '#f7c600'}\r\n                  onMouseOut={(e) => e.target.style.backgroundColor = '#FFD700'}\r\n                >\r\n                  {isLoading ? (\r\n                    <ArrowPathIcon style={{ width: '20px', height: '20px' }} className=\"animate-spin\" />\r\n                  ) : (\r\n                    <>\r\n                      <ArrowPathIcon style={{ width: '20px', height: '20px' }} />\r\n                      Harvest\r\n                    </>\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Stake Modal */}\r\n      {selectedPool && (\r\n        <div style={{\r\n          position: 'fixed',\r\n          inset: 0,\r\n          backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n          backdropFilter: 'blur(8px)',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          zIndex: 50\r\n        }}>\r\n          <Card style={{ width: '100%', maxWidth: '400px' }}>\r\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '24px' }}>\r\n              <h2 style={{ color: '#FFD700', fontWeight: 'bold', fontSize: '24px' }}>\r\n                Stake {selectedPool.lpToken}\r\n              </h2>\r\n              <button\r\n                onClick={() => setSelectedPool(null)}\r\n                style={{ color: '#9ca3af', fontSize: '24px' }}\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n\r\n            <div style={{ marginBottom: '24px' }}>\r\n              <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '8px' }}>\r\n                <label style={{ color: '#9ca3af', fontSize: '14px' }}>Amount</label>\r\n                <span style={{ color: '#9ca3af', fontSize: '14px' }}>\r\n                  Balance: {selectedPool.yourStake}\r\n                </span>\r\n              </div>\r\n              <div style={{\r\n                display: 'flex',\r\n                gap: '12px',\r\n                padding: '16px',\r\n                backgroundColor: 'rgba(0, 0, 0, 0.4)',\r\n                borderRadius: '12px'\r\n              }}>\r\n                <input\r\n                  type=\"number\"\r\n                  value={stakeAmount}\r\n                  onChange={(e) => setStakeAmount(e.target.value)}\r\n                  placeholder=\"0.00\"\r\n                  style={{\r\n                    flex: 1,\r\n                    backgroundColor: 'transparent',\r\n                    border: 'none',\r\n                    outline: 'none',\r\n                    color: '#FFD700',\r\n                    fontSize: '20px'\r\n                  }}\r\n                />\r\n                <span style={{ color: '#FFD700', fontWeight: '500' }}>LP</span>\r\n              </div>\r\n            </div>\r\n\r\n            <button\r\n              onClick={handleStake}\r\n              disabled={isLoading || !stakeAmount}\r\n              style={{\r\n                width: '100%',\r\n                backgroundColor: !stakeAmount ? 'rgba(106, 13, 173, 0.3)' : '#FFD700',\r\n                color: !stakeAmount ? '#9ca3af' : '#000000',\r\n                padding: '16px',\r\n                borderRadius: '12px',\r\n                fontWeight: '500',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                transition: 'all 0.2s',\r\n                cursor: !stakeAmount ? 'not-allowed' : 'pointer'\r\n              }}\r\n              onMouseOver={(e) => stakeAmount && (e.target.style.backgroundColor = '#f7c600')}\r\n              onMouseOut={(e) => stakeAmount && (e.target.style.backgroundColor = '#FFD700')}\r\n            >\r\n              {isLoading ? (\r\n                <svg className=\"animate-spin h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                </svg>\r\n              ) : !isWalletConnected ? (\r\n                \"Connect Wallet\"\r\n              ) : !stakeAmount ? (\r\n                \"Enter an amount\"\r\n              ) : (\r\n                \"Stake\"\r\n              )}\r\n            </button>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} ","import React from 'react';\r\n\r\nconst cardStyle = {\r\n  background: 'linear-gradient(to bottom, rgba(106, 13, 173, 0.2), rgba(0, 0, 0, 1))',\r\n  border: '1px solid rgba(106, 13, 173, 0.3)',\r\n  borderRadius: '16px',\r\n  padding: '24px',\r\n  boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)',\r\n  backdropFilter: 'blur(8px)'\r\n};\r\n\r\nconst titleStyle = {\r\n  color: '#FFD700',\r\n  fontWeight: 'bold',\r\n  fontSize: '20px',\r\n  marginBottom: '16px'\r\n};\r\n\r\nconst Card = ({ \r\n  children, \r\n  title, \r\n  style = {}, \r\n  titleStyle: customTitleStyle = {} \r\n}) => {\r\n  return (\r\n    <div style={{ ...cardStyle, ...style }}>\r\n      {title && (\r\n        <h2 style={{ ...titleStyle, ...customTitleStyle }}>{title}</h2>\r\n      )}\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card; "],"names":["ArrowPathIcon","_ref","svgRef","title","titleId","props","React","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","Farming","isWalletConnected","connectWallet","useStore","selectedPool","setSelectedPool","useState","stakeAmount","setStakeAmount","isLoading","setIsLoading","_jsxs","className","children","style","marginBottom","textAlign","_jsx","color","fontWeight","fontSize","display","gap","name","apr","tvl","yourStake","rewards","lpToken","map","pool","Card","flexDirection","alignItems","justifyContent","width","height","background","borderRadius","marginRight","split","gridTemplateColumns","padding","backgroundColor","onClick","flex","transition","onMouseOver","e","target","onMouseOut","async","setTimeout","handleHarvest","disabled","_Fragment","position","inset","backdropFilter","zIndex","maxWidth","type","value","onChange","placeholder","border","outline","cursor","cx","cy","r","cardStyle","boxShadow","titleStyle","customTitleStyle"],"sourceRoot":""}